name: CI_STORE_DEPLOY_ANDROID

on:
  push:
    branches: [main]

jobs:
  store_deploy_android:
    name: Android Store Release
    runs-on: ubuntu-latest
    env:
      JAVA_VERSION: 12
      FLUTTER_VERSION: 3.24
      AAB_PATH: build/app/outputs/bundle/release/app-release.aab
      KEYSTORE_PATH: android/upload-keystore.jks
      KEY_PROPS_PATH: android/key.properties
      SERVICE_ACCOUNT_PATH: service_account.json
      PACKAGE_NAME: com.wolftrail.ghost_runner # Replace with your actual package name

    steps:
      # Checkout the code from the repository
      - name: Checkout the code
        uses: actions/checkout@v3

      # Set up Java to build the Android project
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
      
      # Set up Flutter for building the app
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      # Decode the Android keystore from secrets
      - name: Decode Android keystore
        run: echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > ${{ env.KEYSTORE_PATH }}

      # Decode the Android key properties file from secrets
      - name: Decode Android key properties
        run: echo "${{ secrets.ANDROID_KEY_PROPERTIES }}" | base64 --decode > ${{ env.KEY_PROPS_PATH }}

      # Decode the Android release Service Account JSON from secrets
      - name: Decode Android Service Account
        run: echo "${{ secrets.PRODUCTION_CREDENTIAL_FILE }}" | base64 --decode > ${{ env.SERVICE_ACCOUNT_PATH }}

      # Install Flutter dependencies
      - name: Install Flutter dependencies
        run: flutter pub get

      # Analyze Flutter project to check for issues
      - name: Analyze Flutter project
        run: flutter analyze

      # Run Flutter tests
      # - name: Run Flutter tests
      #   run: flutter test


 # Update version and build number in pubspec.yaml
      - name: Update version and build number
        run: |
          # Extract current version and build number
          CURRENT_VERSION=$(grep '^version:' pubspec.yaml | sed 's/version: //g')
          echo "Current version: $CURRENT_VERSION"

          # Split version and build number
          VERSION_PART=$(echo $CURRENT_VERSION | cut -d '+' -f 1)
          BUILD_NUMBER_PART=$(echo $CURRENT_VERSION | cut -d '+' -f 2)

          # Increment build number
          NEW_BUILD_NUMBER=$((BUILD_NUMBER_PART + 1))
          echo "New build number: $NEW_BUILD_NUMBER"

          # Update pubspec.yaml with new build number
          sed -i "s/^version: .*/version: $VERSION_PART+$NEW_BUILD_NUMBER/" pubspec.yaml

          # Display updated version
          UPDATED_VERSION=$(grep '^version:' pubspec.yaml | sed 's/version: //g')
          echo "Updated version: $UPDATED_VERSION"

      # Commit updated version
      - name: Commit updated version
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add pubspec.yaml
          git commit -m "Bump version to ${{ steps.update_version.outputs.new_version }}"
          git push origin HEAD:${{ github.ref }}



      # Build the Android App Bundle (AAB) for release
      - name: Build Android App Bundle (AAB)
        run: |
          flutter build appbundle \
            --release \
            --build-name=${{ github.run_number }} \
            --build-number=${{ github.run_number }}

      # Upload the generated AAB file as an artifact for later use
      - name: Upload generated AAB as artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-aab
          path: ${{ env.AAB_PATH }}

      # Deploy the app bundle to Google Play's internal testing track
      - name: Deploy to Google Play Store (Production)
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: ${{ env.SERVICE_ACCOUNT_PATH }}
          packageName: ${{ env.PACKAGE_NAME }}
          releaseFiles: ${{ env.AAB_PATH }}
          track: production
          status: completed
